<script src="https://unpkg.com/leaflet@1.3.4/dist/leaflet.js"
  integrity="sha512-nMMmRyTVoLYqjP9hrbed9S+FzjZHW5gY1TWCHA5ckwXZBadntCNs8kEqAWdrb9O7rxbCaA4lKTIWjDXZxflOcA=="
  crossorigin=""></script>
<script src="https://unpkg.com/esri-leaflet@2.2.3/dist/esri-leaflet.js"
  integrity="sha512-YZ6b5bXRVwipfqul5krehD9qlbJzc6KOGXYsDjU9HHXW2gK57xmWl2gU6nAegiErAqFXhygKIsWPKbjLPXVb2g=="
  crossorigin=""></script>
<script src="https://unpkg.com/esri-leaflet@2.2.3/dist/esri-leaflet.js"
  integrity="sha512-YZ6b5bXRVwipfqul5krehD9qlbJzc6KOGXYsDjU9HHXW2gK57xmWl2gU6nAegiErAqFXhygKIsWPKbjLPXVb2g=="
  crossorigin=""></script>
<!-- <script src="asset.js"></script> -->
<script>


var map = new L.Map('map').setView([40.28414186399997, -109.866420897778], 14);

var layerControl = L.control.layers(null, null);
layerControl.addTo(map);

  var OpenStreetMap_Mapnik = L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
  	maxZoom: 19,
  	attribution: '&copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
  })
  .addTo(map);
  
  var overlays = {};
  // call service to check what layers exist
  
  //let url = "https://sampleserver6.arcgisonline.com/arcgis/rest/services/Water_Network/MapServer";
  let url = "https://sampleserver6.arcgisonline.com/arcgis/rest/services/Energy/Infrastructure/MapServer";
  let serviceUrl = url+'?f=pjson';
  fetch(serviceUrl, {method:"get"})
  .then(function(response) {
    return response.json();
  })
  .then(function(esriService) {
    esriService.layers.forEach(function(layer) {
      console.log(layer.id); // need to pass this to findFeature info...
      let layerName = layer.name.replace(/\s/g, "");
      let objName = layer.name.replace(/\s/g, "");
      let fullName = layer.name // return string
      layerName = L.esri.dynamicMapLayer({
        url: url,
        layers: [layer.id]
      }).addTo(map);
      // Add layers to layerObjects
      layerObjects[objName] = layerName;
      // Add layers to layer control
      layerControl.addOverlay(layerName, fullName)
    })
  });

let layerObjects = {}

// Can probably use this to update the legend wiht checking names Or use the id again
// map.on('click', function (e) {
// if (!map.hasLayer(layerObjects.Wells)) {
//   console.log("no layer with that name")
// } else {
//   console.log("Layer name is in map")
//   }
// });

hasLayer = false

map.on('click', function (e) {
  let layerids = [];
  pane.innerHTML = 'Loading';
  if (identifiedFeature){
    map.removeLayer(identifiedFeature);
    hasLayer = false
  }
  for (let key in layerObjects) {
    if (!map.hasLayer(layerObjects[key])) {
    } else {
      layerids.push(layerObjects[key].options.layers[0])
    }
  }
  getFeatureInfo(e,layerids)
});

map.on('overlayremove', function(e) {
  console.log("Removed layer: " + e.name);
});

  var identifiedFeature;
  var pane = document.getElementById('feature-info-table');

  map.on('zoomend', function() {
    if (identifiedFeature){
      map.removeLayer(identifiedFeature);
    }
  });

 var service = L.esri.dynamicMapLayer({
    url: url,
  });

// need to pass array of id's to this
function getFeatureInfo(e,ids) {
  findInLayers = ids.toString();
  service.identify()
  .on(map)
  .at(e.latlng)
  .layers('top:' + findInLayers)
  .run(function(error, featureCollection){ 
    console.log(featureCollection)
      if (featureCollection.features.length > 0) {
        if (!hasLayer) {
          identifiedFeature = L.geoJSON(featureCollection.features[0], {
            style: {"color": "red"},
          }).addTo(map);
          hasLayer = true
        }
        console.log(featureCollection.features[0]);
        pane.innerHTML = "<h4>Feature description</h4>";
        let keyValue = featureCollection.features[0].properties
        populateTable(keyValue);
      }
      else {
        pane.innerHTML = 'No features identified.';
      }
    });
  }
  
  function populateTable(data) {
    for (var key in data) {
      if (data.hasOwnProperty(key)) {
        const markup = `
          <tr>
            <th>${key}</th>
            <td>${data[key]}</td>
          </tr>`
        pane.innerHTML += markup
      }
    }
  };
// TODO: Add legend
// Revert the order the layers are added to the map to make sure points in on top
// Get feature info only for visible layers

</script>